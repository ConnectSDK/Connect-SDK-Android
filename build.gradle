buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'jacoco'


jacoco {
    toolVersion = "0.8.5"
}

task jacocoTestReport(type: JacocoReport, dependsOn: "check") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    getClassDirectories().setFrom(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs.from = android.sourceSets.main.java.srcDirs
    sourceDirectories.from = android.sourceSets.main.java.srcDirs
    executionData.from = 'build/jacoco/testDebug.exec'

    reports {
        xml.enabled = true
        html.enabled = true
    }

}

build.dependsOn jacocoTestReport

android {
    compileSdkVersion 28
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }

    defaultConfig {
        minSdkVersion 21    // This over her
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [
                    'src',
                    'core/src',
                    'modules/google_cast/src',
                    'modules/firetv/src',
            ]
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        test {
            java.srcDirs = [
                    'core/test/src',
                    'modules/google_cast/test/src',
                    'modules/firetv/test/src',
            ]
        }
    }
    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
        }
    }
    android {
        lintOptions {
            abortOnError false
        }
    }
}

android.testOptions.unitTests.all {
    include '**/*Test.class'
}

dependencies {
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'
    implementation 'javax.jmdns:jmdns:3.4.1'
    api 'com.android.support:appcompat-v7:28.0.0'
    implementation fileTree(dir: 'modules/firetv/libs', include: '*.jar')
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:mediarouter-v7:28.0.0'
    implementation 'com.google.android.gms:play-services-cast:19.0.0'
    implementation 'com.googlecode.plist:dd-plist:1.23'
    implementation 'com.nimbusds:srp6a-android:2.0.2'
    implementation 'net.i2p.crypto:eddsa:0.2.0'
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.2'
    testImplementation 'xmlunit:xmlunit:1.4'
    implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.10'
    implementation(group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.3.5') {
        exclude module: 'org.apache.httpcomponents:httpclient'
    }
}
